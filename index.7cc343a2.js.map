{"mappings":"ACGA,IAAM,EAAS,SAAS,sBAAsB,CAAC,cAM/C,SAAS,EAAU,CAAQ,SACzB,AAAI,EAAS,WAAW,GAAG,QAAQ,CAAC,QAC3B,EAAS,KAAK,CAAC,EAAG,IAAM,IAAM,EAAS,KAAK,CAAC,IAG/C,CACT,CAEA,IAAK,IAAI,EAAI,EAAG,EAAI,EAAO,MAAM,CAAE,IAAK,CACtC,IAAM,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAY,CAAM,CAAC,EAAE,CAAC,YAAY,CAAC,QACnC,EAAK,CAAM,CAAC,EAAE,CAAC,YAAY,CAAC,MAElC,EAAM,YAAY,CAAC,MAAO,GAC1B,EAAM,YAAY,CAAC,QAAS,eAC5B,CAAM,CAAC,EAAE,CAAC,YAAY,CAAC,cAAe,EAlB/B,AAkBuD,EAlBnD,KAAK,CAAC,EAAG,GAAG,WAAW,GAAK,AAkBuB,EAlBnB,KAAK,CAAC,KAmBjD,EAAM,WAAW,CAAG,EAAU,EAAU,WAAW,IAEnD,CAAM,CAAC,EAAE,CAAC,qBAAqB,CAAC,cAAe,EACjD","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\n// write code here\nvar fields = document.getElementsByClassName(\"field-text\");\nfunction goToUpperCase(str) {\n    return str.slice(0, 1).toUpperCase() + str.slice(1);\n}\nfunction splitName(nameText) {\n    if (nameText.toLowerCase().endsWith(\"name\")) return nameText.slice(0, -4) + \" \" + nameText.slice(-4);\n    return nameText;\n}\nfor(var i = 0; i < fields.length; i++){\n    var label = document.createElement(\"label\");\n    var nameField = fields[i].getAttribute(\"name\");\n    var id = fields[i].getAttribute(\"id\");\n    label.setAttribute(\"for\", id);\n    label.setAttribute(\"class\", \"field-label\");\n    fields[i].setAttribute(\"placeholder\", splitName(goToUpperCase(nameField)));\n    label.textContent = splitName(nameField.toUpperCase());\n    fields[i].insertAdjacentElement(\"beforebegin\", label);\n}\n\n//# sourceMappingURL=index.7cc343a2.js.map\n","'use strict';\n\n// write code here\nconst fields = document.getElementsByClassName('field-text');\n\nfunction goToUpperCase(str) {\n  return str.slice(0, 1).toUpperCase() + str.slice(1);\n}\n\nfunction splitName(nameText) {\n  if (nameText.toLowerCase().endsWith('name')) {\n    return nameText.slice(0, -4) + ' ' + nameText.slice(-4);\n  }\n\n  return nameText;\n}\n\nfor (let i = 0; i < fields.length; i++) {\n  const label = document.createElement('label');\n  const nameField = fields[i].getAttribute('name');\n  const id = fields[i].getAttribute('id');\n\n  label.setAttribute('for', id);\n  label.setAttribute('class', 'field-label');\n  fields[i].setAttribute('placeholder', splitName(goToUpperCase(nameField)));\n  label.textContent = splitName(nameField.toUpperCase());\n\n  fields[i].insertAdjacentElement('beforebegin', label);\n}\n"],"names":["fields","document","getElementsByClassName","splitName","nameText","toLowerCase","endsWith","slice","i","length","label","createElement","nameField","getAttribute","id","setAttribute","str","toUpperCase","textContent","insertAdjacentElement"],"version":3,"file":"index.7cc343a2.js.map"}